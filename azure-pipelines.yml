# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
    - azurepipeline_cicd
variables:
    denodoPath: 'C:\Denodo\DenodoPlatform8.0\bin'
    server: 'dnd-v-yisc003a.centralindia.cloudapp.azure.com:9999/project2'
    testingToolPath: 'C:\Denodo\denodo-testing-tool-8.0-20230425'
    vqlFileName: 'vcscommand.vql'
    testingToolConfig: 'configuration.properties'
    testingToolTest: 'test1.denodotest'
    pipelineTmpPath: 'C:\Denodo\DenodoPlatform8.0\pipeline_files'
    pool: Denodo_cicd_agent_pool
    name: 'Denodo_cicd_agent'
jobs:
- job: AgentJob
  pool: 'Denodo_cicd_agent_pool'
  
  steps:
  - script: |
        REM Create VQL file with DVCSPULL command
        echo DVCSPULL project2; > $(pipelineTmpPath)\$(vqlFileName)
    displayName: 'Create DVCSPULL VQL File'
  - script: |
        REM Use import script to execute PULL
        $(denodoPath)\import.bat --singleuser --file "$(pipelineTmpPath)\$(vqlFileName)" --server $(server)?admin@$(PASSWORD)
    displayName: 'Pull changes to master VDP'

  - script: |
        REM Tests with Denodo Testing Tool
        cd $(testingToolPath)\bin
        REM execute Testing Tool
        denodo-test.bat $(testingToolPath)\conf\$(testingToolConfig) $(testingToolPath)\conf\$(testingToolTest)
    displayName: 'Tests with Denodo Testing Tool'

  - script: |
        REM locate in Denodo folder
        cd $(denodoPath)
        REM execute export script
        export.bat -l admin -p $(PASSWORD) -h $(server) -f $(pipelineTmpPath)\$(REVISION_NAME) -P includejars=yes -P includescanners=yes -P includeCustomComponents=yes -P replaceExistingElements=yes -P includeCreateDatabase=yes
    displayName: 'Export VDP from developer merged or main databse to a VQL file'
    env:
        PASSWORD: $(PASSWORD)
        REVISION: $(REVISION_NAME)
  - task: PublishBuildArtifacts@1
    inputs:
        PathtoPublish: '$(pipelineTmpPath)\$(REVISION_NAME)'
        ArtifactName: 'VQL for Revision'
        publishLocation: 'Container'
    
  - task: PublishBuildArtifacts@1
    inputs:
        PathtoPublish: '$(testingToolPath)\src\CSVReporter.csv'
        ArtifactName: 'Testing Tool CSV gerenated file'
        publishLocation: 'Container'

  - script: |
        REM Convert vql file of db to base64 and use Rest Api to create revision
        cd $(pipelineTmpPath)
        python base64revision.py -s AZRCISVDWSOLM01 -p 10090 -v $(REVISION_NAME) -n revision_test_azure_devops -d rev_desc_test_azure_devops -e 63 -c deploy_test_azure_devops -u $(USERNAME) -a $(PASSWORD)
    displayName: 'Create revision with Denodo Rest Api'
  - script: |
        REM Retry deletion of both temporary VQL file and REVISION_NAME file until they are deleted
        :retryVql
        del "%pipelineTmpPath%\%vqlFileName%" 2> NUL
        if exist "%pipelineTmpPath%\%vqlFileName%" (
            REM Wait for a second before retrying
            timeout /t 1 /nobreak > NUL
            goto retryVql)
        :retryRevision
            del "%pipelineTmpPath%\%REVISION_NAME%" 2> NUL
            if exist "%pipelineTmpPath%\%REVISION_NAME%" (# Wait for a second before retrying
            timeout /t 1 /nobreak > NUL
            goto retryRevision
            )
    displayName: 'Retry Delete Temporary Pull VQL and REVISION Files'

